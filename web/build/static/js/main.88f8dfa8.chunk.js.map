{"version":3,"sources":["app/accountinggifts.jpg","services/notification-service.js","services/data-service.js","product/product.js","product-condensed/product-condensed.js","wishlist/wishlist.js","app/App.js","services/http-service.js","serviceWorker.js","index.js"],"names":["module","exports","observers","instance","NotificationService","postNotification","notifName","data","obs","x","length","callBack","removeObserver","observer","splice","addObserver","obj","push","this","ns","wishList","DataService","itemOnWishList","item","_id","addWishListItem","removeWishListItem","ds","Product","props","onButtonClicked","state","onWishList","product","bind","onWishListChanged","newWishList","setState","btnClass","className","src","imageURL","alt","title","price","href","onClick","Component","ProductCondensed","removeProduct","WishList","createWishList","map","key","http","getProducts","Promise","resolve","reject","fetch","then","res","json","App","loadData","self","products","err","productList","logo","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88f8dfa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/accountinggifts.46b032ce.jpg\";","export const NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\r\n\r\nvar observers = {};\r\nlet instance = null;\r\n\r\nclass NotificationService {\r\n    constructor() {\r\n        if (!instance) {\r\n            instance = this;\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    postNotification = (notifName, data) => {\r\n        let obs = observers[notifName];\r\n\r\n        for (var x = 0; x < obs.length; x++) {\r\n            var obj = obs[x];\r\n            obj.callBack(data);\r\n        }\r\n    }\r\n\r\n    removeObserver = (observer, notifName) => {\r\n        let obs = observers[notifName];\r\n\r\n        if (obs) {\r\n            for (var x = 0; x < obs.length; x++) {\r\n                if (observer === obs[x].observer) {\r\n                    obs.splice(x, 1);\r\n                    observers[notifName] = obs;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addObserver = (notifName, observer, callBack) => {\r\n        let obs = observers[notifName];\r\n\r\n        if (!obs) {\r\n            observers[notifName] = [];\r\n        }\r\n\r\n        let obj = {\r\n            observer: observer,\r\n            callBack: callBack\r\n        };\r\n        observers[notifName].push(obj);\r\n    }\r\n}\r\n\r\nexport default NotificationService;","import NotificationService, {\r\n  NOTIF_WISHLIST_CHANGED,\r\n} from \"./notification-service\";\r\n\r\nlet ns = new NotificationService();\r\n\r\nlet instance = null;\r\nvar wishList = [];\r\n\r\nclass DataService {\r\n  constructor() {\r\n    if (!instance) {\r\n      instance = this;\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  itemOnWishList = (item) => {\r\n    for (var x = 0; x < wishList.length; x++) {\r\n      if (wishList[x]._id === item._id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  addWishListItem = (item) => {\r\n    wishList.push(item);\r\n    ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n  };\r\n\r\n  removeWishListItem = (item) => {\r\n    for (var x = 0; x < wishList.length; x++) {\r\n      if (wishList[x]._id === item._id) {\r\n        wishList.splice(x, 1);\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default DataService;\r\n","import React, { Component } from \"react\";\r\nimport \"./product.css\";\r\nimport DataService from \"../services/data-service\";\r\nimport NotificationService, {\r\n  NOTIF_WISHLIST_CHANGED,\r\n} from \"../services/notification-service\";\r\n\r\nlet ds = new DataService();\r\nlet ns = new NotificationService();\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { onWishList: ds.itemOnWishList() };\r\n\r\n    // Bind Functions\r\n    this.onButtonClicked = this.onButtonClicked.bind(this);\r\n    this.onWishListChanged = this.onWishListChanged.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ns.removeObserver(this, NOTIF_WISHLIST_CHANGED);\r\n  }\r\n\r\n  onWishListChanged(newWishList) {\r\n    this.setState({ onWishList: ds.itemOnWishList(this.props.product) });\r\n  }\r\n\r\n  onButtonClicked = () => {\r\n    if (this.state.onWishList) {\r\n      ds.removeWishListItem(this.props.product);\r\n    } else {\r\n      ds.addWishListItem(this.props.product);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var btnClass;\r\n\r\n    if (this.state.onWishList) {\r\n      btnClass = \"btn btn-danger\";\r\n    } else {\r\n      btnClass = \"btn btn-primary\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card product\">\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={this.props.product.imageURL}\r\n          alt=\"Product\"\r\n        ></img>\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">{this.props.product.title}</h4>\r\n          <p className=\"card-text\">Price: ${this.props.product.price}</p>\r\n          <a\r\n            href=\"#\"\r\n            onClick={() => this.onButtonClicked()}\r\n            className={btnClass}\r\n          >\r\n            {this.state.onWishList\r\n              ? \"Remove from Wish List\"\r\n              : \"Add to Wish List\"}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../services/data-service\";\r\nimport \"./product-condensed.css\";\r\n\r\nlet ds = new DataService();\r\n\r\nclass ProductCondensed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Bind Functions\r\n    this.removeProduct = this.removeProduct.bind(this);\r\n  }\r\n\r\n  removeProduct = () => {\r\n    ds.removeWishListItem(this.props.product);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"list-group-item pc-condensed\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2\">\r\n            <a\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={() => this.removeProduct()}\r\n            >\r\n              X\r\n            </a>\r\n          </div>\r\n          <div className=\"col-sm-6 title\">{this.props.product.title}</div>\r\n          <div className=\"col-sm-2\">\r\n            <b>${this.props.product.price}</b>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductCondensed;\r\n","import React, { Component } from \"react\";\r\nimport \"./wishlist.css\";\r\nimport ProductCondensed from \"../product-condensed/product-condensed\";\r\nimport DataService from \"../services/data-service\";\r\nimport NotificationService, {\r\n  NOTIF_WISHLIST_CHANGED,\r\n} from \"../services/notification-service\";\r\n\r\nlet ns = new NotificationService();\r\n\r\nclass WishList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wishList: [],\r\n    };\r\n\r\n    // Bind Functions\r\n    this.createWishList = this.createWishList.bind(this);\r\n    this.onWishListChanged = this.onWishListChanged.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ns.removeObserver(this, NOTIF_WISHLIST_CHANGED);\r\n  }\r\n\r\n  onWishListChanged(newWishList) {\r\n    this.setState({ wishList: newWishList });\r\n  }\r\n\r\n  createWishList = () => {\r\n    const list = this.state.wishList.map((product) => (\r\n      <ProductCondensed product={product} key={product._id} />\r\n    ));\r\n    return list;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-block\">\r\n          <h4 className=\"card-title\">Wish List</h4>\r\n          <ul className=\"list-group\">{this.createWishList()}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WishList;\r\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport logo from \"./accountinggifts.jpg\";\nimport \"./App.css\";\n\n// Components\nimport Product from \"../product/product\";\nimport WishList from \"../wishlist/wishlist\";\n\n// Services\nimport HttpService from \"../services/http-service\";\n\nconst http = new HttpService();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { products: [] };\n\n    // Bind Functions\n    this.loadData = this.loadData.bind(this);\n    this.productList = this.productList.bind(this);\n\n    this.loadData();\n  }\n\n  loadData = () => {\n    var self = this;\n    http.getProducts().then(\n      (data) => {\n        self.setState({ products: data });\n      },\n      (err) => {}\n    );\n  };\n\n  productList = () => {\n    const list = this.state.products.map((product) => (\n      <div className=\"col-sm-4\" key={product._id}>\n        <Product product={product} />\n      </div>\n    ));\n    return list;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"softenImageEdges\">\n            <img className=\"App-logo\" src={logo} alt=\"logo\" />\n          </div>\n          {/* <h2>Welcome to React</h2> */}\n        </div>\n        <div className=\"container-fluid App-main\">\n          <div className=\"row\">\n            <div className=\"col-sm-8\">\n              <div class=\"card-deck\">{this.productList()}</div>\n            </div>\n            <div className=\"col-sm-4\">\n              <WishList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import \"whatwg-fetch\";\r\n\r\nclass HttpService {\r\n  getProducts = () => {\r\n    var promise = new Promise((resolve, reject) => {\r\n      fetch(\"http://localhost:3000/product\").then((res) => {\r\n        resolve(res.json());\r\n      });\r\n    });\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport default HttpService;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}